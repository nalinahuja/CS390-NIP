# fsync.sh, Developed by Nalin Ahuja, nalinahuja

# Embedded Constants
declare CR="\r" NL="\n" CONNECTION_DELAY=1 SYNC_DELAY=0.50

# Excluded Files
declare SELF_EXE=$(command basename ${0}) LOC_FOLD="local" GIT_REPO=".git*" VIM_SWAP="*.swp" DS_STORE=".DS_Store" LOCALIZED=".localized"

# End Defined Constants----------------------------------------------------------------------------------------------------------------------------------------------

# Remote Project Configuration
declare ssh_addr="ahuja15@cuda.cs.purdue.edu"
declare ssh_path="~/Documents/cs390/lab2"

# Local Project Configuration
declare loc_path=$(command pwd)
declare pwd_fold=$(command basename ${loc_path})

# End Global Variables-----------------------------------------------------------------------------------------------------------------------------------------------

function synchronize() {
  # Display Prompt
  command echo -e "${CR}atom: Synchronizing local (./${pwd_fold%/}) with remote (${ssh_path%/})"

  # Initialize Paths
  local src="${loc_path%/}/" dst="${ssh_addr}:${ssh_path%/}/"

  # Start Synchronization Loop
  while [[ -n $(command pgrep -f "atom") ]]; do
    # Synchronize Local To Remote
    command rsync -azq --del --perms --timeout="${CONNECTION_DELAY}" --exclude="${SELF_EXE}"  \
                                                                     --exclude="${LOC_FOLD}"  \
                                                                     --exclude="${GIT_REPO}"  \
                                                                     --exclude="${VIM_SWAP}"  \
                                                                     --exclude="${DS_STORE}"  \
                                                                     --exclude="${LOCALIZED}" \
                                                                     --ignore-errors "${src}" "${dst}"

    # Sleep For A Bit
    command sleep ${SYNC_DELAY}
  done

  # Display Prompt
  command echo -e "${NL}atom: Stopping syncronization with remote (${ssh_path%/})"
}

# End Synchronizer Function-------------------------------------------------------------------------------------------------------------------------------------------

# Verify Application Dependency
if [[ -z "$(command -v rsync)" ]]
then
  # Display Prompt
  command echo -e "atom: Could not locate rsync dependency"

  # Exit Program
  command exit
fi

# Display Prompt
command echo -en "atom: Configuring workspace at remote (${ssh_path%/})"

# Open Atom Editor
command atom "${loc_path}"

# Wait For Atom Startup
while [[ -z $(command pgrep -f "atom") ]]; do
  # Sleep For A Bit
  command sleep ${SYNC_DELAY}
done

# Run File Syncronizer
synchronize &

# End Main-----------------------------------------------------------------------------------------------------------------------------------------------------------
